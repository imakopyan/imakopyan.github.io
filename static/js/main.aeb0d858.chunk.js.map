{"version":3,"sources":["App/App.css","SearchBar/SearchBar.css","Dropdown/Dropdown.css","SearchList/SearchList.css","preloader.svg","SearchBar/SearchBar.js","SearchResult/SearchResult.js","SearchList/SearchList.js","Dropdown/Dropdown.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","app","bar","app-header","appHeader","list","preloader","error","submit","search-bar","searchBar","input","dropdown","customSelect","search-list","searchList","__webpack_require__","p","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearchSubmit","bind","assertThisInitialized","handleSearchChange","event","preventDefault","onSearchSubmit","onSearchChange","target","value","react_default","a","createElement","className","s","onSubmit","type","placeholder","autoFocus","onChange","Component","SearchResult","getUrl","url","title","replace","concat","href","rel","description","dangerouslySetInnerHTML","__html","SearchList","searchResultsArray","result","map","src_SearchResult_SearchResult","snippet","key","pageid","Dropdown","optionList","item","id","App","state","searchResults","length","setState","hasError","handlerSelect","sortType","Number","searchQuery","isLoading","handleSearch","handleChange","_this2","encodeURIComponent","Promise","resolve","fetch","cache","then","response","ok","Error","json","query","search","catch","e","newArray","slice","sort","b","timestamp","src_SearchBar_SearchBar","filter","src_Dropdown_Dropdown","src","alt","src_SearchList_SearchList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aeb0d858.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App__app___2Ya5b\",\"bar\":\"App__bar___FEzxE\",\"app-header\":\"App__app-header___2RS-m\",\"appHeader\":\"App__app-header___2RS-m\",\"list\":\"App__list___FCt4A\",\"preloader\":\"App__preloader___1-gVd\",\"error\":\"App__error___1Qc_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit\":\"SearchBar__submit___1SKSh\",\"search-bar\":\"SearchBar__search-bar___2Ye5L\",\"searchBar\":\"SearchBar__search-bar___2Ye5L\",\"input\":\"SearchBar__input___3XKp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown__dropdown___2NUt6\",\"customSelect\":\"Dropdown__customSelect___239da\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-list\":\"SearchList__search-list___1DYWw\",\"searchList\":\"SearchList__search-list___1DYWw\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.20050e55.svg\";","import React, { Component } from 'react';\nimport s from './SearchBar.css';\n\nclass SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this);\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n    }\n\n    handleSearchSubmit(event) {\n        event.preventDefault();\n        this.props.onSearchSubmit();\n    }\n\n    handleSearchChange(event) {\n        this.props.onSearchChange(event.target.value);\n      }\n\n    render() {\n        return (\n            <div className={s.searchBar}>\n                <form onSubmit={this.handleSearchSubmit}>\n                    <input\n                        className={s.input}\n                        type=\"text\"\n                        placeholder=\"Введите запрос\"\n                        autoFocus\n                        onChange={this.handleSearchChange} />\n                    <button className={s.submit}>\n                    Поиск\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport s from './SearchResult.css';\n\nclass SearchResult extends Component {\n  getUrl = () => {\n  const url = this.props.title.replace(/ /g, \"_\");\n    return `https://ru.wikipedia.org/wiki/${url}`;\n  }\n    render() {\n      return (\n        <section className={s.SearchResult}>\n          <h2 className={s.title}>\n            <a href={this.getUrl()} target=\"_blank\" rel=\"nofollow noopener\">\n              {this.props.title}\n            </a>\n          </h2>\n          <p className={s.description} dangerouslySetInnerHTML={{__html: this.props.description}} />\n        </section>\n      );\n    }\n  }\n  \n  export default SearchResult;","import React, { Component } from 'react';\nimport SearchResult from '../SearchResult/SearchResult';\nimport s from './SearchList.css';\n\nclass SearchList extends Component {\nrender() {\n    const searchResultsArray\n    = this.props.result.map((result) =>\n        <SearchResult\n          title={result.title}\n          description={result.snippet}\n          key={result.pageid} />\n      );\n    return (\n      <section className={s.searchList}>\n        {searchResultsArray}\n      </section>\n    );\n}\n}\n\nexport default SearchList;\n","import React from 'react';\nimport s from './Dropdown.css';\n\n\nconst Dropdown = (props) => {\n  const handlerSelect= (event) => {props.onChange(event.target.value)};\n  return (\n      <div className={s.dropdown}>\n          {props.optionList && (\n            <select\n              className={s.customSelect}\n              onChange={handlerSelect}\n            >\n              {\n              props.optionList.map(item => (\n                <option key={item.id} value={item.id}>{item.title}</option>\n              ))\n            }\n            </select>\n          )}\n      </div>\n  );\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchList from '../SearchList/SearchList';\nimport Dropdown from '../Dropdown/Dropdown';\nimport preloader from '../preloader.svg';\n\nimport s from './App.css';\n\nconst optionList = [\n  { id: 1, title: 'По релевантности' },\n  { id: 2, title: 'А-Я' },\n  { id: 3, title: 'Я-А' },\n  { id: 4, title: 'Самая свежая статья' },\n  { id: 5, title: 'Самая старая статья' },\n\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchQuery: '',\n      submit: false,\n      searchResults: [],\n      sortType: 1,\n      isLoading: false,\n      hasError: false,\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n\n  handleSearch() {\n    this.setState({\n      isLoading: true,\n      hasError: false,\n    });\n    const url = `https://ru.wikipedia.org/w/api.php?action=query&origin=*&list=search&prop=info&inprop=url&utf8=&format=json&srlimit=25&srsearch=${encodeURIComponent(this.state.searchQuery)}`;\n\n    Promise.resolve(fetch(url, {cache: 'no-cache'}))\n    .then((response) => {\n      if (!response.ok) throw new Error('Error');\n      return response.json();\n    })\n    .then((searchResults) => {\n      this.setState({searchResults : searchResults.query.search, isLoading: false, hasError: searchResults.query.search.length<1});\n    })\n    .catch((e) =>  this.setState ({ isLoading: false, hasError: true}));\n  }\n  \n  error = () =>  {\n    if (this.state.searchResults.length === 0) {\n      this.setState ({ hasError: true}) // ???\n     };\n  }\n\n  handleChange(searchQuery) {\n    this.setState({\n      searchQuery,\n    })\n  }\n\n  handlerSelect = (id) => {\n    this.setState({\n    sortType: Number(id),\n  });\n  }\n\n  render() {\n    let newArray;\n    if (this.state.sortType === 2) {\n      newArray =  this.state.searchResults.slice().sort((a,b) =>  {\n      if (a.title < b.title) {\n          return -1;\n        }\n        if (a.title > b.title) {\n          return 1;\n        }\n        return 0;\n      });\n    } else if (this.state.sortType === 3) {\n      newArray =  this.state.searchResults.slice().sort((a,b) =>  {\n          if (b.title < a.title) {\n              return -1;\n            }\n            if (b.title > a.title) { \n              return 1;\n            }\n            return 0;\n          });\n    } else if (this.state.sortType === 5) {\n      newArray = this.state.searchResults.slice().sort((a,b) =>  {\n      if (a.timestamp < b.timestamp) {\n          return -1;\n        }\n        if (a.timestamp > b.timestamp) {\n          return 1;\n        }\n        return 0;\n      });\n    } else if (this.state.sortType === 4) {\n      newArray =   this.state.searchResults.slice().sort((a,b) =>  {\n      if (a.timestamp > b.timestamp) {\n          return -1;\n        }\n        if (a.timestamp < b.timestamp) {\n          return 1;\n        }\n        return 0;\n      });\n    } \n      return (\n      <div className={s.app}>\n        <header className={s.appHeader}>\n        <h1>Wikipedia Search</h1>\n        </header>\n        <div>\n        <div className={s.bar}>\n        <SearchBar \n        onSearchSubmit={this.handleSearch}\n        onSearchChange={this.handleChange}\n      />\n              <div className={s.filter}>\n        <Dropdown\n          optionList={optionList}\n          onChange={this.handlerSelect}\n        />\n        </div>\n        </div>\n      <div className={s.list}>\n      {this.state.isLoading ? (\n        <div className={s.preloader}>\n              <img src={preloader} alt='preloder'/>\n        </div>\n      ): (\n    <SearchList\n    result={newArray || this.state.searchResults } />\n      )}\n       {this.state.hasError & !this.state.isLoading ? (\n       <p className={s.error}>Ничего не найдено</p>\n       ): ('')}\n       </div>\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}